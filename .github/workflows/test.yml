name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check TypeScript
        run: npx tsc --noEmit

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check dist/ exists
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: dist/ directory not created"
            exit 1
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

  test-integration:
    name: Integration Tests (Devnet)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test wallet
        env:
          TEST_WALLET_SECRET: ${{ secrets.TEST_WALLET_SECRET }}
        run: |
          echo "TEST_WALLET_SECRET=$TEST_WALLET_SECRET" > .env
          echo "TEST_NETWORK=devnet" >> .env

      - name: Run integration tests
        env:
          TEST_WALLET_SECRET: ${{ secrets.TEST_WALLET_SECRET }}
          TEST_NETWORK: devnet
        run: npm run test:integration

  bundle-size:
    name: Check Bundle Size
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check bundle size
        run: |
          SIZE=$(du -sb dist | cut -f1)
          MAX_SIZE=512000  # 500KB max

          echo "Bundle size: $SIZE bytes ($(numfmt --to=iec-i --suffix=B $SIZE))"

          if [ $SIZE -gt $MAX_SIZE ]; then
            echo "❌ Error: Bundle size ($SIZE bytes) exceeds limit ($MAX_SIZE bytes)"
            exit 1
          else
            echo "✅ Bundle size OK"
          fi

  all-checks-passed:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint, build, test-unit, bundle-size]
    if: always()

    steps:
      - name: Check job results
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ] || \
             [ "${{ needs.test-unit.result }}" != "success" ] || \
             [ "${{ needs.bundle-size.result }}" != "success" ]; then
            echo "❌ One or more required checks failed"
            exit 1
          fi
          echo "✅ All checks passed!"
